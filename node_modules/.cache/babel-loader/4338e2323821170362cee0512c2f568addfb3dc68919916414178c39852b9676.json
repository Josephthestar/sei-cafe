{"ast":null,"code":"var _jsxFileName = \"/Users/josephrihan/Desktop/Software_Engineering_Immersive/sei-cafe/src/pages/NewOrderPage/NewOrderPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport * as itemsAPI from '../../utilities/items-api';\nimport * as ordersAPI from '../../utilities/orders-api';\nimport './NewOrderPage.css';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Logo from '../../components/Logo/Logo';\nimport MenuList from '../../components/MenuList/MenuList';\nimport CategoryList from '../../components/CategoryList/CategoryList';\nimport OrderDetail from '../../components/OrderDetail/OrderDetail';\nimport UserLogOut from '../../components/UserLogOut/UserLogOut';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewOrderPage(_ref) {\n  _s();\n  let {\n    user,\n    setUser\n  } = _ref;\n  const [menuItems, setMenuItems] = useState([]);\n  const [activeCat, setActiveCat] = useState('');\n  const [cart, setCart] = useState(null);\n  const categoriesRef = useRef([]);\n  const navigate = useNavigate();\n\n  // The empty dependency array causes the effect\n  // to run ONLY after the FIRST render\n  useEffect(function () {\n    async function getItems() {\n      const items = await itemsAPI.getAll();\n      categoriesRef.current = [...new Set(items.map(item => item.category.name))];\n      setMenuItems(items);\n      setActiveCat(categoriesRef.current[0]);\n    }\n    getItems();\n\n    // Load cart (a cart is the unpaid order for the logged in user)\n    async function getCart() {\n      const cart = await ordersAPI.getCart();\n      setCart(cart);\n    }\n    getCart();\n  }, []);\n\n  /*--- Event Handlers ---*/\n  async function handleAddToOrder(itemId) {\n    // 1. Call the addItemToCart function in ordersAPI, passing to it the itemId, and assign the resolved promise to a variable named cart.\n    const updatedCart = await ordersAPI.addItemToCart(itemId);\n    // 2. Update the cart state with the updated cart received from the server\n    setCart(updatedCart);\n  }\n  async function handleChangeQty(itemId, newQty) {\n    const updatedCart = await ordersAPI.setItemQtyInCart(itemId, newQty);\n    setCart(updatedCart);\n  }\n  async function handleCheckout() {\n    await ordersAPI.checkout();\n    navigate('/orders');\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"NewOrderPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CategoryList, {\n        categories: categoriesRef.current,\n        activeCat: activeCat,\n        setActiveCat: setActiveCat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/orders\",\n        className: \"button btn-sm\",\n        children: \"PREVIOUS ORDERS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserLogOut, {\n        user: user,\n        setUser: setUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n      menuItems: menuItems.filter(item => item.category.name === activeCat),\n      handleAddToOrder: handleAddToOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrderDetail, {\n      order: cart,\n      handleChangeQty: handleChangeQty,\n      handleCheckout: handleCheckout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(NewOrderPage, \"vPC3oyGMCx3QnwT9YFNxVYAWtyE=\", false, function () {\n  return [useNavigate];\n});\n_c = NewOrderPage;\nvar _c;\n$RefreshReg$(_c, \"NewOrderPage\");","map":{"version":3,"names":["useState","useEffect","useRef","itemsAPI","ordersAPI","Link","useNavigate","Logo","MenuList","CategoryList","OrderDetail","UserLogOut","NewOrderPage","user","setUser","menuItems","setMenuItems","activeCat","setActiveCat","cart","setCart","categoriesRef","navigate","getItems","items","getAll","current","Set","map","item","category","name","getCart","handleAddToOrder","itemId","updatedCart","addItemToCart","handleChangeQty","newQty","setItemQtyInCart","handleCheckout","checkout","filter"],"sources":["/Users/josephrihan/Desktop/Software_Engineering_Immersive/sei-cafe/src/pages/NewOrderPage/NewOrderPage.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport * as itemsAPI from '../../utilities/items-api';\nimport * as ordersAPI from '../../utilities/orders-api';\nimport './NewOrderPage.css';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Logo from '../../components/Logo/Logo';\nimport MenuList from '../../components/MenuList/MenuList';\nimport CategoryList from '../../components/CategoryList/CategoryList';\nimport OrderDetail from '../../components/OrderDetail/OrderDetail';\nimport UserLogOut from '../../components/UserLogOut/UserLogOut';\n\nexport default function NewOrderPage({ user, setUser }) {\n  const [menuItems, setMenuItems] = useState([]);\n  const [activeCat, setActiveCat] = useState('');\n  const [cart, setCart] = useState(null);\n  const categoriesRef = useRef([]);\n  const navigate = useNavigate();\n\n  // The empty dependency array causes the effect\n  // to run ONLY after the FIRST render\n  useEffect(function() {\n    async function getItems() {\n      const items = await itemsAPI.getAll();\n      categoriesRef.current = [...new Set(items.map(item => item.category.name))];\n      setMenuItems(items);\n      setActiveCat(categoriesRef.current[0]);\n    }\n    getItems();\n\n    // Load cart (a cart is the unpaid order for the logged in user)\n    async function getCart() {\n      const cart = await ordersAPI.getCart();\n      setCart(cart);\n    }\n    getCart();\n  }, []);\n\n  /*--- Event Handlers ---*/\n  async function handleAddToOrder(itemId) {\n    // 1. Call the addItemToCart function in ordersAPI, passing to it the itemId, and assign the resolved promise to a variable named cart.\n    const updatedCart = await ordersAPI.addItemToCart(itemId);\n    // 2. Update the cart state with the updated cart received from the server\n    setCart(updatedCart);\n  }\n\n  async function handleChangeQty(itemId, newQty) {\n    const updatedCart = await ordersAPI.setItemQtyInCart(itemId, newQty);\n    setCart(updatedCart);\n  }\n\n  async function handleCheckout() {\n    await ordersAPI.checkout();\n    navigate('/orders');\n  }\n\n\n  return (\n    <main className=\"NewOrderPage\">\n      <aside>\n        <Logo />\n        <CategoryList\n          categories={categoriesRef.current}\n          activeCat={activeCat}\n          setActiveCat={setActiveCat}\n        />\n        <Link to=\"/orders\" className=\"button btn-sm\">PREVIOUS ORDERS</Link>\n        <UserLogOut user={user} setUser={setUser} />\n      </aside>\n      <MenuList\n        menuItems={menuItems.filter(item => item.category.name === activeCat)}\n        handleAddToOrder={handleAddToOrder}\n      />\n      <OrderDetail\n        order={cart}\n        handleChangeQty={handleChangeQty}\n        handleCheckout={handleCheckout}\n      />\n    </main>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}