{"ast":null,"code":"import _regeneratorRuntime from\"/Users/josephrihan/Desktop/Software_Engineering_Immersive/sei-cafe/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/josephrihan/Desktop/Software_Engineering_Immersive/sei-cafe/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{getToken}from'./users-service';export default function sendRequest(_x){return _sendRequest.apply(this,arguments);}function _sendRequest(){_sendRequest=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(url){var method,payload,options,token,res,_args=arguments;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:method=_args.length>1&&_args[1]!==undefined?_args[1]:'GET';payload=_args.length>2&&_args[2]!==undefined?_args[2]:null;// Fetch accepts an options object as the 2nd argument\n// used to include a data payload, set headers, specifiy the method, etc.\noptions={method:method};if(payload){options.headers={'Content-Type':'application/json'};options.body=JSON.stringify(payload);}token=getToken();if(token){// Need to add an Authorization header\n// Use the Logical OR Assignment operator\noptions.headers||(options.headers={});// Older approach\n// options.headers = options.headers || {};\noptions.headers.Authorization=\"Bearer \".concat(token);}_context.next=8;return fetch(url,options);case 8:res=_context.sent;if(!res.ok){_context.next=11;break;}return _context.abrupt(\"return\",res.json());case 11:throw new Error('Bad Request');case 12:case\"end\":return _context.stop();}}},_callee);}));return _sendRequest.apply(this,arguments);}","map":{"version":3,"names":["getToken","sendRequest","url","method","payload","options","headers","body","JSON","stringify","token","Authorization","fetch","res","ok","json","Error"],"sources":["/Users/josephrihan/Desktop/Software_Engineering_Immersive/sei-cafe/src/utilities/send-request.js"],"sourcesContent":["import { getToken } from './users-service';\n\nexport default async function sendRequest(url, method = 'GET', payload = null) {\n  // Fetch accepts an options object as the 2nd argument\n  // used to include a data payload, set headers, specifiy the method, etc.\n  const options = { method };\n  if (payload) {\n    options.headers = { 'Content-Type': 'application/json' };\n    options.body = JSON.stringify(payload);\n  }\n  const token = getToken();\n  if (token) {\n    // Need to add an Authorization header\n    // Use the Logical OR Assignment operator\n    options.headers ||= {};\n    // Older approach\n    // options.headers = options.headers || {};\n    options.headers.Authorization = `Bearer ${token}`;\n  }\n  const res = await fetch(url, options);\n  // if res.ok is false then something went wrong\n  if (res.ok) return res.json();\n  throw new Error('Bad Request');\n}"],"mappings":"gUAAA,OAASA,QAAQ,KAAQ,iBAAiB,CAE1C,uBAA8BC,YAAW,gDAqBxC,+FArBc,iBAA2BC,GAAG,yKAAEC,MAAM,+CAAG,KAAK,CAAEC,OAAO,+CAAG,IAAI,CAC3E;AACA;AACMC,OAAO,CAAG,CAAEF,MAAM,CAANA,MAAO,CAAC,CAC1B,GAAIC,OAAO,CAAE,CACXC,OAAO,CAACC,OAAO,CAAG,CAAE,cAAc,CAAE,kBAAmB,CAAC,CACxDD,OAAO,CAACE,IAAI,CAAGC,IAAI,CAACC,SAAS,CAACL,OAAO,CAAC,CACxC,CACMM,KAAK,CAAGV,QAAQ,EAAE,CACxB,GAAIU,KAAK,CAAE,CACT;AACA;AACAL,OAAO,CAACC,OAAO,GAAfD,OAAO,CAACC,OAAO,CAAK,CAAC,CAAC,EACtB;AACA;AACAD,OAAO,CAACC,OAAO,CAACK,aAAa,kBAAaD,KAAK,CAAE,CACnD,CAAC,sBACiBE,MAAK,CAACV,GAAG,CAAEG,OAAO,CAAC,QAA/BQ,GAAG,mBAELA,GAAG,CAACC,EAAE,0DAASD,GAAG,CAACE,IAAI,EAAE,eACvB,IAAIC,MAAK,CAAC,aAAa,CAAC,wDAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}