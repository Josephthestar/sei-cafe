{"ast":null,"code":"// Service modules export business/app logic\n// such as managing tokens, etc.\n// Service modules often depend upon API modules\n// for making AJAX requests to the server.\n\nimport * as usersAPI from './users-api';\nexport async function signUp(userData) {\n  const token = await usersAPI.signUp(userData);\n  localStorage.setItem('token', token);\n  return getUser();\n}\nexport async function login(credentials) {\n  // Delegate the AJAX request to the users-api.js\n  // module.\n  const token = await usersAPI.login(credentials);\n  localStorage.setItem('token', token);\n  return getUser();\n}\nexport function logOut() {\n  localStorage.removeItem('token');\n}\nexport function getToken() {\n  // getItem will return null if the key does not exists\n  const token = localStorage.getItem('token');\n  if (!token) return null;\n  const payload = JSON.parse(atob(token.split('.')[1]));\n  // A JWT's exp is expressed in seconds, not miliseconds\n  if (payload.exp * 1000 < Date.now()) {\n    // Token has expired\n    localStorage.removeItem('token');\n    return null;\n  }\n  return token;\n}\nexport function getUser() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}","map":{"version":3,"names":["usersAPI","signUp","userData","token","localStorage","setItem","getUser","login","credentials","logOut","removeItem","getToken","getItem","payload","JSON","parse","atob","split","exp","Date","now","user"],"sources":["/Users/josephrihan/Desktop/Software_Engineering_Immersive/sei-cafe/src/utilities/users-service.js"],"sourcesContent":["// Service modules export business/app logic\n// such as managing tokens, etc.\n// Service modules often depend upon API modules\n// for making AJAX requests to the server.\n\nimport * as usersAPI from './users-api';\n\nexport async function signUp(userData) {\n  const token = await usersAPI.signUp(userData);\n  localStorage.setItem('token', token);\n  return getUser();\n}\n\nexport async function login(credentials) {\n  // Delegate the AJAX request to the users-api.js\n  // module.\n  const token = await usersAPI.login(credentials);\n  localStorage.setItem('token', token);\n  return getUser();\n}\n\nexport function logOut() {\n  localStorage.removeItem('token');\n}\n\nexport function getToken() {\n  // getItem will return null if the key does not exists\n  const token = localStorage.getItem('token');\n  if (!token) return null;\n  const payload = JSON.parse(atob(token.split('.')[1]));\n  // A JWT's exp is expressed in seconds, not miliseconds\n  if (payload.exp * 1000 < Date.now()) {\n    // Token has expired\n    localStorage.removeItem('token');\n    return null;\n  }\n  return token;\n}\n\nexport function getUser() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,QAAQ,MAAM,aAAa;AAEvC,OAAO,eAAeC,MAAM,CAACC,QAAQ,EAAE;EACrC,MAAMC,KAAK,GAAG,MAAMH,QAAQ,CAACC,MAAM,CAACC,QAAQ,CAAC;EAC7CE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EACpC,OAAOG,OAAO,EAAE;AAClB;AAEA,OAAO,eAAeC,KAAK,CAACC,WAAW,EAAE;EACvC;EACA;EACA,MAAML,KAAK,GAAG,MAAMH,QAAQ,CAACO,KAAK,CAACC,WAAW,CAAC;EAC/CJ,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EACpC,OAAOG,OAAO,EAAE;AAClB;AAEA,OAAO,SAASG,MAAM,GAAG;EACvBL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;AAClC;AAEA,OAAO,SAASC,QAAQ,GAAG;EACzB;EACA,MAAMR,KAAK,GAAGC,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACT,KAAK,EAAE,OAAO,IAAI;EACvB,MAAMU,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACb,KAAK,CAACc,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD;EACA,IAAIJ,OAAO,CAACK,GAAG,GAAG,IAAI,GAAGC,IAAI,CAACC,GAAG,EAAE,EAAE;IACnC;IACAhB,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;IAChC,OAAO,IAAI;EACb;EACA,OAAOP,KAAK;AACd;AAEA,OAAO,SAASG,OAAO,GAAG;EACxB,MAAMH,KAAK,GAAGQ,QAAQ,EAAE;EACxB,OAAOR,KAAK,GAAGW,IAAI,CAACC,KAAK,CAACC,IAAI,CAACb,KAAK,CAACc,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACI,IAAI,GAAG,IAAI;AAClE"},"metadata":{},"sourceType":"module","externalDependencies":[]}